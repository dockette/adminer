name: Docker

on:
  push:
    branches: [ master ]

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: ./adminer-dg/Dockerfile
            tag: dg
            platforms: linux/amd64,linux/arm64

          - dockerfile: ./adminer-editor/Dockerfile
            tag: editor
            platforms: linux/amd64,linux/arm64

          - dockerfile: ./adminer-full/Dockerfile
            tag: full
            platforms: linux/amd64,linux/arm64

          - dockerfile: ./adminer-mongo/Dockerfile
            tag: mongo
            platforms: linux/amd64,linux/arm64

          - dockerfile: ./adminer-mysql/Dockerfile
            tag: mysql
            platforms: linux/amd64,linux/arm64

          - dockerfile: ./adminer-oracle-11/Dockerfile
            tag: oracle-11
            platforms: linux/amd64

          - dockerfile: ./adminer-oracle-12/Dockerfile
            tag: oracle-12
            platforms: linux/amd64

          - dockerfile: ./adminer-postgres/Dockerfile
            tag: postgres
            platforms: linux/amd64,linux/arm64

          - dockerfile: ./adminer-full/Dockerfile
            tag: latest
            platforms: linux/amd64,linux/arm64

    name: Docker (dockette/adminer:${{ matrix.tag }})

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.dockerfile }}
          push: true
          tags: dockette/adminer:${{ matrix.tag }}
          platforms: ${{ matrix.platforms }}
